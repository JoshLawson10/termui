name: CI / Docs Deploy

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  setup:
    name: Setup Python & Poetry
    runs-on: ubuntu-latest
    outputs:
      poetry-cache: ${{ steps.cache-poetry.outputs.cache-hit }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python & Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.6.1"

      - name: Cache Poetry dependencies
        id: cache-poetry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Configure poetry
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      - name: Install dependencies
        run: poetry install --with dev

  lint-test:
    name: Lint & Test
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python & Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.6.1"

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Configure poetry
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      - name: Install dependencies
        run: poetry install --with dev

      - name: Run Black
        run: poetry run black --check src tests

      - name: Run Pylint
        run: poetry run pylint src

      - name: Run tests
        run: poetry run pytest --maxfail=1 --disable-warnings -q

  docs:
    name: Build & Deploy Docs
    runs-on: ubuntu-latest
    needs: lint-test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python & Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.6.1"

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Configure poetry
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      - name: Install dependencies
        run: poetry install --with dev

      - name: Build docs
        run: poetry run mkdocs build --strict

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          force_orphan: true